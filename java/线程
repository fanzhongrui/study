线程
线程是一个程序内部的顺序控制流。
线程和进程的区别
每个进程都有独立的代码和数据空间（进程上下文），进程间的切换会有较大的开销。
线程可以看成是轻量级的进程，同一类线程共享代码和数据空间，每个线程有独立的运行栈和程序计数器（PC），线程切换的开销小。
多进程：在操作系统中能同时运行多个任务（程序）。
多线程：在同一应用程序中有多个顺序流同时执行

java的线程是通过java.lang.Thread类来实现的。
VM启动时会有一个由主方法（public static void main(){}）所定义的线程。
可以通过创建Thread的实例来创建新的线程。
每个线程都是通过某个特定Thread对象所对应的方法run（）来完成其操作的，方法run（）称为线程体；
通过调用Thread类的start（）方法来启动一个线程。

线程理解：线程是一个程序里面不同的执行路径
每一个分支都叫做一个线程，main（）叫做主分支，也叫线程。
