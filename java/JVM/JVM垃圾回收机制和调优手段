    JVM内存由几个部分组成：堆、方法区、栈、程序计数器、本地方法栈
    JVM垃圾回收仅针对公共内存区域，即：堆和方法区进行，因为只有这两个区域在运行时才能知道需要创建些对象，其内存分配和回收都是动态的。

一、垃圾回收策略
    1.1分代管理
        将堆和方法区按照对象不同年龄进行分代：
          （Young Generation and Old Generation）堆中会频繁创建对象，基于一种分代的思想，按照对象存活时间将堆划分为新生代和旧生代两部分，并不是一次垃圾回收新生代存活的对象就放入旧生代，
          而是要经过几次GC后还存活的对象，才放入旧生代，所以把新生代再次划分为Eden区和两个Survivor区，让对象创建在Eden区，然后在两个Survivor之间反复复制，
          最后仍然存活的对象才复制到旧生代中。
          
          （Permanent Generation）方法区存放的是常量、加载的字节码文件信息等，信息相对稳定。因为不会频繁创建对象，所以不需要分代，直接GC即可。
          
          新生代：
            1.所有新对象创建发生在Eden区，Eden区满后触发新生代上的minor GC，将Eden区和非空闲Survivor区存活对象复制到另一个空闲的Survivor区中。
