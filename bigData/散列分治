方法介绍：
    对于海量数据而言，由于无法将其一次装进内存进行处理，
    不得不将其通过散列映射的方法分割成相应的小块数据，然后再针对各个小块数据通过散列映射的方法分割成相应的小块数据，然后再针对各个小块数据通过hash_map进行统计或其它数据。
    
    散列映射：
        通过映射的方式让数据均匀分布在对应的内存位置上（例如，大数据通过取余的方式映射成小数据存放在内存中，或把大文件映射成多个小文件），
          而这种映射的方式通常通过散列函数进行映射，好的散列函数能让数据均匀分布而减少冲突。
          
问题示例：
    寻找top IP
      从海量日志数据提取出某日访问百度（www.baidu.com）次数最多的那个IP。
      分析：每天访问百度的IP数量巨大，如果想一次把所有IP数据装进内存处理，内存容量通常不够，故针对数据量太大、内存受限的情况，可以把大文件转化成（取模映射）小文件，从而由大化小，逐个处理。
      简言之，先映射，后统计，最后排序。
      
      解法：具体分为三个步骤
        1.分而治之，散列映射。
            将该日访问百度的所有IP从访问日志中提取出来，然后逐个写入一个大文件中，
              接着采取散列映射的方法（如hash(ip)%1000）,把整个大文件的数据映射到1000个小文件中。
        2.hash_map统计。大文件转化成了小文件，便可以采用hash_map（IP， value）分别对1000个小文件的IP进行频率统计，
          找出每个小文件中出现频率最高的IP，总共1000个IP。
