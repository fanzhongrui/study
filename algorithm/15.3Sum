//15.3Sum
public class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
        List<List<Integer>> res = new ArrayList<List<Integer>>();
		if(nums.length == 0)return res;
		Arrays.sort(nums);
		for(int i=0; i<nums.length; i++){
			if(i>0&&nums[i]==nums[i-1])continue;
			int k = -nums[i];
			int st = i+1, ed = nums.length-1;
			while(st<ed){
				int x = nums[st]+nums[ed];
				if(x<k){
					st++;
				}else if(x>k){
					ed--;
				}else{
					List<Integer> t = new ArrayList<Integer>();
					t.add(nums[i]);
					t.add(nums[st]);
					t.add(nums[ed]);
					res.add(t);
					st++;
					ed--;
					while(st<ed && nums[st]==nums[st-1])st++;
					while(st<ed && nums[ed]==nums[ed+1])ed--;
				}
			}
		}
		return res;
    }
}
Anothe solution:
//Time Limit Exceeded
public class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
        List<List<Integer>> res = new ArrayList<List<Integer>>();
		if(nums.length == 0)return res;
		Map<Integer, List<Integer>> map = new HashMap<Integer, List<Integer>>();
		for(int i=0; i<nums.length; i++){
			for(int j=i+1; j<nums.length; j++){
				int k = nums[i]+nums[j];
//				System.out.println("ni="+nums[i]+" nj="+nums[j]+" k="+k);
				List<Integer> list;
				if(map.containsKey(k)){
					list = map.get(k);
				}else{
					list = new ArrayList<Integer>();
				}
				list.add(i);
				list.add(j);
				map.put(k, list);
			}
		}
		for(int i=0; i<nums.length; i++){
			int k = -nums[i];
			if(map.containsKey(k)){
//				System.out.println("k="+k);
				List<Integer> t = map.get(k);
				int j=0;
				while(j<t.size()){
					if(t.get(j)!=i && t.get(j+1)!=i){
						Integer[] tmp = {nums[i],nums[t.get(j)],nums[t.get(j+1)]};
						Arrays.sort(tmp);
						List<Integer> r = Arrays.asList(tmp);
//						System.out.println("    r="+r);
						if(!res.contains(r))res.add(r);
					}
					j+=2;
				}
			}
		}
		return res;
    }
}
