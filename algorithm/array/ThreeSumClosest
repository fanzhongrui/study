package leet.array;

import java.util.Arrays;
/**
 * Given an array S of n integers, find three integers in S such that the sum is closest to a given number,
 * target. Return the sum of the three integers. You may assume that each input would have exactly one solution.
 * For example, given array S={-1 2 1 -4},and target = 1;
 * the sum that is closest to the target is 2.
 * @author admin
 *
 */
public class ThreeSumClosest {
	private static int threeSumClosest(int a[], int value){
		int close = Integer.MAX_VALUE, res = 0;
		Arrays.sort(a);
		for(int i=0; i<a.length; i++){
			int j=i+1, k = a.length-1;
			while(j < k){
				int sum = a[i]+a[j]+a[k];
				int x = Math.abs(sum-value);
				if(close > x){
					close = x;
					res = sum;
				}
				if(sum < value)j++;
				else if(sum > value)k--;
				else return value;
			}
		}
		return res;
	}
	public static void main(String[] args){
		int[] a1={0,1,2,-1,3,4,5};
		System.out.println(ThreeSumClosest.threeSumClosest(a1, 15));
		System.out.println(ThreeSumClosest.threeSumClosest(a1, 10));
		System.out.println(ThreeSumClosest.threeSumClosest(a1, 9));
		System.out.println(ThreeSumClosest.threeSumClosest(a1, 8));
		System.out.println(ThreeSumClosest.threeSumClosest(a1, 7));
		System.out.println(ThreeSumClosest.threeSumClosest(a1, -1));
	}
}
