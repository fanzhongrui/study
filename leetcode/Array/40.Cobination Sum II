 //40.Cobination Sum II
public class Solution {
   
	public List<List<Integer>> combinationSum2(int[] c, int target){
		List<List<Integer>> res = new ArrayList<List<Integer>>();
		List<Integer> t = new ArrayList<Integer>();
		Arrays.sort(c);
		getSum2(res, t, c, 0, target);
		return res;
	}
	public void getSum2(List<List<Integer>> res, List<Integer> t, int[] c, int d, int target){
		if(target<=0 || d==c.length){
			if(target!=0)return;
			List<Integer> tmp = new ArrayList<Integer>(t);
			if(!res.contains(tmp))res.add(tmp);
			return;
		}
		getSum2(res, t, c, d+1, target);
		t.add(c[d]);
		getSum2(res, t, c, d+1, target-c[d]);
		t.remove(t.size()-1);
	}
}
